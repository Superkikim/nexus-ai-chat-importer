import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs-extra";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

async function copyFiles() {
    await fs.copy("manifest.json", "dist/manifest.json");
}

async function build() {
    await fs.emptyDir("dist");

    const context = await esbuild.context({
        banner: {
            js: banner,
        },
        entryPoints: ["src/main.ts"],
        bundle: true,
        external: [
            "obsidian",
            "electron",
            "@codemirror/autocomplete",
            "@codemirror/collab",
            "@codemirror/commands",
            "@codemirror/language",
            "@codemirror/lint",
            "@codemirror/search",
            "@codemirror/state",
            "@codemirror/view",
            "@lezer/common",
            "@lezer/highlight",
            "@lezer/lr",
            ...builtins],
        format: "cjs",
        target: "es2018",
        logLevel: "info",
        sourcemap: prod ? false : "inline",
        treeShaking: true,
        outfile: "dist/main.js",
    });

    if (prod) {
        await context.rebuild();
        await copyFiles();
        context.dispose();
    } else {
        await context.rebuild();
        await copyFiles();
        await context.watch();
    }

    console.log("Build complete");
}

build().catch((err) => {
    console.error(err);
    process.exit(1);
});